{"Asset":{"68cv631avrjhrlw7":{"source":"themes/hexo3/source/js/script.js","mtime":1392216188000,"modified":true,"_id":"68cv631avrjhrlw7","full_source":"/data/root/code/swan_docs/smeta/themes/hexo3/source/js/script.js","path":"js/script.js"},"w18ixytt73t89ord":{"source":"themes/hexo3/source/css/style.styl","mtime":1392216188000,"modified":true,"_id":"w18ixytt73t89ord","full_source":"/data/root/code/swan_docs/smeta/themes/hexo3/source/css/style.styl","path":"css/style.styl"},"plw65jojr8hq34e5":{"source":"themes/hexo3/source/css/fonts/FontAwesome.otf","mtime":1392216188000,"modified":true,"_id":"plw65jojr8hq34e5","full_source":"/data/root/code/swan_docs/smeta/themes/hexo3/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf"},"dqcm1pr56evahp57":{"source":"themes/hexo3/source/css/fonts/fontawesome-webfont.eot","mtime":1392216188000,"modified":true,"_id":"dqcm1pr56evahp57","full_source":"/data/root/code/swan_docs/smeta/themes/hexo3/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot"},"2ewzec096i51zql5":{"source":"themes/hexo3/source/css/fonts/fontawesome-webfont.svg","mtime":1392216188000,"modified":true,"_id":"2ewzec096i51zql5","full_source":"/data/root/code/swan_docs/smeta/themes/hexo3/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg"},"7xqk8oiz8aygpddd":{"source":"themes/hexo3/source/css/fonts/fontawesome-webfont.ttf","mtime":1392216188000,"modified":true,"_id":"7xqk8oiz8aygpddd","full_source":"/data/root/code/swan_docs/smeta/themes/hexo3/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf"},"40phyvxd7fz91b5x":{"source":"themes/hexo3/source/css/fonts/fontawesome-webfont.woff","mtime":1392216188000,"modified":true,"_id":"40phyvxd7fz91b5x","full_source":"/data/root/code/swan_docs/smeta/themes/hexo3/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff"},"r1bg7u7xijs6nhks":{"source":"themes/hexo3/source/css/images/shattered.png","mtime":1392216188000,"modified":true,"_id":"r1bg7u7xijs6nhks","full_source":"/data/root/code/swan_docs/smeta/themes/hexo3/source/css/images/shattered.png","path":"css/images/shattered.png"},"jt2mswnmya26ob8k":{"source":"themes/hexo3/source/css/images/shattered_@2X.png","mtime":1392216188000,"modified":true,"_id":"jt2mswnmya26ob8k","full_source":"/data/root/code/swan_docs/smeta/themes/hexo3/source/css/images/shattered_@2X.png","path":"css/images/shattered_@2X.png"}},"Cache":{"6luwjgqbkujwv9br":{"content":"layout: index\n---\n\n<div class=\"intro-wrap\">\n  <div class=\"outer\">\n    <h2 class=\"intro-title\">Features</h2>\n  </div>\n  <div class=\"outer\">\n    <div class=\"intro-feature\">\n      <h3 class=\"intro-feature-title\">Blazing Fast</h3>\n      <p class=\"intro-feature-desc\">Hexo is powered by Node.js and supports multi-thread generating. Hundreds of files take only seconds to generate.</p>\n    </div>\n    <div class=\"intro-feature\">\n      <h3 class=\"intro-feature-title\">Easy Write</h3>\n      <p class=\"intro-feature-desc\">Hexo supports GitHub Flavored Markdown and all Octopress plugins and highly Jekyll/Octopress compatible.</p>\n    </div>\n    <div class=\"intro-feature\">\n      <h3 class=\"intro-feature-title\">Extensibility</h3>\n      <p class=\"intro-feature-desc\">Hexo supports EJS, Swig &amp; Stylus. You can install more plugins for Haml, Jade, Less supports.</p>\n    </div>\n  </div>\n</div>\n\n<div class=\"intro-wrap\">\n  <div class=\"outer\">\n    <h2 class=\"intro-title\">Quick Start</h2>\n  </div>\n  <div class=\"outer\">\n    <div class=\"intro-quick-start\">\n      <h3 class=\"intro-feature-title\">1. Install</h3>\n      <p class=\"intro-feature-desc\">\n        <figure class=\"highlight\">\n          <pre><code>$ npm install hexo -g</code></pre>\n        </figure>\n      </p>\n    </div>\n    <div class=\"intro-quick-start\">\n      <h3 class=\"intro-feature-title\">2. Setup</h3>\n      <p class=\"intro-feature-desc\">\n        <figure class=\"highlight\">\n          <pre><code>$ hexo init blog && cd blog</code></pre>\n        </figure>\n      </p>\n    </div>\n    <div class=\"intro-quick-start\">\n      <h3 class=\"intro-feature-title\">3. Generate</h3>\n      <p class=\"intro-feature-desc\">\n        <figure class=\"highlight\">\n          <pre><code>$ hexo generate</code></pre>\n        </figure>\n      </p>\n    </div>\n    <div class=\"intro-quick-start\">\n      <h3 class=\"intro-feature-title\">4. Server</h3>\n      <p class=\"intro-feature-desc\">\n        <figure class=\"highlight\">\n          <pre><code>$ hexo server</code></pre>\n        </figure>\n      </p>\n    </div>\n  </div>\n</div>\n","mtime":1393039242000,"source":"index.html","_id":"6luwjgqbkujwv9br"},"proid9uxk8flnt0m":{"content":"title: 设备管理 API\nnext: device_monitor\nprev: inner_api\n---\n\n###添加设备(device.add)\n\n####[URL](#add_url) \nhttp://127.0.0.1/user/?/device.add\n\n####[请求方式](#add_post)\nPOST\n\n####[支持格式](#add_json)\nJSON \n\n####[请求参数](#add_param)\n\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`name` | true | string | 设备名称，设备名称必须是首个字符是字母，由数字、字母、下划线组成,并且至少6位\n`host_name` | true | string | 设备主机名\n`display_name` | false | string | 设备描述信息\n`heartbeat_time` | false | string | 设备监控的心跳线超时时间\n\n####[注意事项](#add_notice)\n\n无\n\n####[调用样例](#add_example)\n\n```\n\t<?php\n\t$url = '127.0.0.1:9080/user/?/device.add';\n\t$rev = call($url, 'POST', array('name' => 'device_0001'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n\n####[返回结果](#add_result)\n``` json\n\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"add device device_0001 success.\",\n\t\t\"data\": {\n\t\t\t\"device_id\": \"3\"\n\t\t}\n\t}\n\n```\n####[返回字段说明](#add_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 返回的数据，如果错误返回 NULL\n`device_id` | int | 返回设备 ID\n\n---\n###修改设备(device.mod)\n\n####[URL](#mod_url) \nhttp://127.0.0.1/user/?/device.mod\n####[请求方式](#mod_post)\nPOST\n####[支持格式](#mod_json)\nJSON \n####[请求参数](#mod_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`device_id` | true | int     | 设备 ID\n`host_name` | false | string | 设备主机名\n`display_name` | false | string    | 设备描述信息\n`heartbeat_time` | false | string | 设备监控的心跳线超时时间\n####[注意事项](#mod_notice)\n无\n####[调用样例](#mod_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/user/?/device.mod';\n\t$rev = call($url, 'POST', array('device_id' => '3', 'display_name' => 'device_0001_desc'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#mod_result)\n``` json\n\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"mod device success.\",\n\t\t\"data\": Null \n\t}\n\n```\n####[返回字段说明](#mod_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n\n---\n###删除设备(device.del)\n\n####[URL](#del_url) \nhttp://127.0.0.1/user/?/device.del\n####[请求方式](#del_post)\nPOST\n####[支持格式](#del_json)\nJSON \n####[请求参数](#del_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`device_id` | true | int     | 设备 ID\n####[注意事项](#del_notice)\n无\n####[调用样例](#del_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/user/?/device.del';\n\t$rev = call($url, 'POST', array('device_id' => '3'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#del_result)\n``` json\n\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"delete device success.\",\n\t\t\"data\": Null \n\t}\n\n```\n####[返回字段说明](#del_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n---\n###获取设备(device.json)\n\n####[URL](#json_url) \nhttp://127.0.0.1/user/?/device.json\n####[请求方式](#json_post)\nPOST\n####[支持格式](#json_json)\nJSON \n####[请求参数](#json_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`page` | false | int     | 分页的页码\n`page_count` | false | int     | 每页的个数\n####[注意事项](#json_notice)\n无\n####[调用样例](#json_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/user/?/device.json';\n\t$rev = call($url, 'POST', array('page' => '1'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#json_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"get device success.\",\n\t\t\"data\": {\n\t\t\t\"result\": [\n\t\t\t\t{\n\t\t\t\t\t\"device_id\": \"1\",\n\t\t\t\t\t\"device_name\": \"device_001\",\n\t\t\t\t\t\"host_name\": \"192.168.1.132\",\n\t\t\t\t\t\"device_display_name\": \"\",\n\t\t\t\t\t'heartbeat_time': '20',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"device_id\": \"2\",\n\t\t\t\t\t\"device_name\": \"device_002\",\n\t\t\t\t\t\"host_name\": \"192.168.1.132\",\n\t\t\t\t\t\"device_display_name\": \"\",\n\t\t\t\t\t'heartbeat_time': '20',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"device_id\": \"3\",\n\t\t\t\t\t\"device_name\": \"device_003\",\n\t\t\t\t\t\"host_name\": \"192.168.1.132\",\n\t\t\t\t\t\"device_display_name\": \"device_desc_test\"\n\t\t\t\t\t'heartbeat_time': '20',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"device_id\": \"4\",\n\t\t\t\t\t\"device_name\": \"device_004\",\n\t\t\t\t\t\"host_name\": \"192.168.1.132\",\n\t\t\t\t\t\"device_display_name\": \"\",\n\t\t\t\t\t'heartbeat_time': '20',\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"count\": \"4\"\n\t\t}\n\t}\n```\n####[返回字段说明](#json_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n`device_id` | int | 设备 ID\n`device_name` | string | 设备名称\n`host_name` | string | 设备主机名\n`device_display_name` | string | 设备描述信息\n\n\n\n","mtime":1396365471000,"source":"docs/device.md","_id":"proid9uxk8flnt0m"},"ycwkzano53y9vzzv":{"content":"title: 设备监控器管理 API\nnext: madapter\nprev: device\n---\n\n###添加设备监控器(device_monitor.add)\n\n####[URL](#add_url) \nhttp://127.0.0.1/user/?/device_monitor.add\n\n####[请求方式](#add_post)\nPOST\n\n####[支持格式](#add_json)\nJSON \n\n####[请求参数](#add_param)\n\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`device_id` | true | int | 设备 ID\n`madapter_id` | true | int | 监控器 ID\n`monitor_name` | true | string | 设备监控器名称\n`attr_data` | false | mixed | 监控器属性值, 注意：此参数为 JSON 字符串\n\n####[注意事项](#add_notice)\n\n无\n\n####[调用样例](#add_example)\n\n```\n\t<?php\n\t$url = '127.0.0.1:9080/user/?/device_monitor.add';\n\t$attr_data = array(\n\t\tarray(\n\t\t\t'attr_id' => 1,\n\t\t\t'value'   => 'attr_value_1',\n\t\t),\n\t\tarray(\n\t\t\t'attr_id' => 2,\n\t\t\t'value'   => 'attr_value_2',\n\t\t),\n\t);\n\t$attr_data = json_encode($attr_data);\n\t$rev = call($url, 'POST', array('madapter_id' => 1, 'device_id' => 1, 'attr_data' => $attr_data, 'db_name' => 'test_dm'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n\n```\n\n####[返回结果](#add_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"add device monitor success.\",\n\t\t\"data\": 11\n\t}\n```\n####[返回字段说明](#add_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 返回的数据，如果错误返回 NULL\n`monitor_id` | int | 返回该设备监控器 ID\n`device_id` | int | 返回该设备 ID\n\n---\n###修改设备监控器(device.mod)\n\n####[URL](#mod_url) \nhttp://127.0.0.1/user/?/device_monitor.mod\n####[请求方式](#mod_post)\nPOST\n####[支持格式](#mod_json)\nJSON \n####[请求参数](#mod_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`device_id` | true | int     | 设备 ID\n`madapter_id` | true | int     | 监控器 ID\n`monitor_id` | true | string | 设备监控器 ID\n`attr_data` | false | string    | 设备监控器的属性 params 值\n####[注意事项](#mod_notice)\n无\n####[调用样例](#mod_example)\n```\n\t<?php\n\t$attr_data = array(\n      array(\n          'attr_id' => 1,\n          'value'   => 'test_1',\n      ),\n      array(\n          'attr_id' => 2,\n          'value'   => 'test_2',\n      ),\n  );\n  $attr_data = json_encode($attr_data);\n  $url = '127.0.0.1:9080/user/?/device_monitor.mod';\n  $rev = call($url, 'POST', array('device_id' => 1, 'madapter_id' => 1, 'attr_data' => $attr_data, 'monitor_id' => 1));\n  $rev = json_decode($rev, true);\n  var_dump($rev);\n```\n####[返回结果](#mod_result)\n``` json\n\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"mod device monitor success.\",\n\t\t\"data\": Null \n\t}\n\n```\n####[返回字段说明](#mod_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n---\n###删除设备监控器(device_monitor.del)\n\n####[URL](#del_url) \nhttp://127.0.0.1/user/?/device_monitor.del\n####[请求方式](#del_post)\nPOST\n####[支持格式](#del_json)\nJSON \n####[请求参数](#del_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`monitor_id` | true | int     | 设备监控器 ID\n`device_id` | true | int     | 设备 ID\n####[注意事项](#del_notice)\n无\n####[调用样例](#del_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/user/?/device_monitor.del';\n\t$rev = call($url, 'POST', array('monitor_id' => '1', 'device_id' => 1));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#del_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"delete device monitor success.\",\n\t\t\"data\": Null \n\t}\n```\n####[返回字段说明](#del_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n---\n###获取设备监控器(device_monitor.json)\n\n####[URL](#json_url) \nhttp://127.0.0.1/user/?/device_monitor.json\n####[请求方式](#json_post)\nPOST\n####[支持格式](#json_json)\nJSON \n####[请求参数](#json_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`device_id`  | true  | int  | 设备 ID\n`page` | false | int     | 分页的页码\n`page_count` | false | int     | 每页的个数\n####[注意事项](#json_notice)\n无\n####[调用样例](#json_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/user/?/device.json';\n\t$rev = call($url, 'POST', array('device_id' => '3'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#json_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"get device monitor success.\",\n\t\t\"data\": {\n\t\t\t\"result\": [\n\t\t\t\t{\n\t\t\t\t\t\"monitor_id\": \"11\",\n\t\t\t\t\t\"monitor_name\": \"test_name\",\n\t\t\t\t\t\"device_id\": \"1\",\n\t\t\t\t\t\"monitor_id\": \"1\",\n\t\t\t\t\t\"monitor_name\": \"apache\",\n\t\t\t\t\t\"steps\": \"0\",\n\t\t\t\t\t\"monitor_display_name\": \"WEB SERVER 监控器\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"count\": \"1\"\n\t\t}\n\t}\n```\n####[返回字段说明](#json_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n`device_id` | int | 设备 ID\n`monitor_id` | int | 设备监控器 ID\n`monitor_name` | int | 设备监控器名称\n`monitor_id` | int | 监控器 ID\n`steps` | int | 监控器存储间隔\n`monitor_name` | string | 监控器名称\n`monitor_display_name` | string | 监控器描述信息\n\n\n\n\n---\n###获取设备监控器(device_monitor.info)\n\n####[URL](#info_url) \nhttp://127.0.0.1/user/?/device_monitor.info\n####[请求方式](#info_post)\nPOST\n####[支持格式](#info_json)\nJSON \n####[请求参数](#info_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`device_id`  | true  | int  | 设备 ID\n`madapter_id`  | true  | int  | 监控器 ID\n`monitor_id`  | true  | int  | 设备监控器 ID\n`page` | false | int     | 分页的页码\n`page_count` | false | int     | 每页的个数\n####[注意事项](#info_notice)\n无\n####[调用样例](#info_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/user/?/device_monitor.info';\n\t$rev = call($url, 'POST', array('device_id' => '1', 'madapter_id' => '1'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#info_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"get device monitor success.\",\n\t\t\"data\": {\n\t\t\t\"result\": [\n\t\t\t\t{\n\t\t\t\t\t\"monitor_id\": \"11\",\n\t\t\t\t\t\"monitor_name\": \"test_name\",\n\t\t\t\t\t\"device_id\": \"1\",\n\t\t\t\t\t\"monitor_id\": \"1\",\n\t\t\t\t\t\"attr_id\": \"1\",\n\t\t\t\t\t\"value\": \"http://\",\n\t\t\t\t\t\"attr_name\": \"url\",\n\t\t\t\t\t\"form_type\": \"1\",\n\t\t\t\t\t\"form_data\": \"\",\n\t\t\t\t\t\"attr_default\": \"\",\n\t\t\t\t\t\"attr_display_name\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"monitor_id\": \"11\",\n\t\t\t\t\t\"monitor_name\": \"test_name\",\n\t\t\t\t\t\"device_id\": \"1\",\n\t\t\t\t\t\"monitor_id\": \"1\",\n\t\t\t\t\t\"attr_id\": \"2\",\n\t\t\t\t\t\"value\": \"value_test\",\n\t\t\t\t\t\"attr_name\": \"test\",\n\t\t\t\t\t\"form_type\": \"1\",\n\t\t\t\t\t\"form_data\": \"\",\n\t\t\t\t\t\"attr_default\": \"\",\n\t\t\t\t\t\"attr_display_name\": \"\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"count\": \"2\"\n\t\t}\n\t}\n```\n####[返回字段说明](#info_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n`device_id` | int | 设备 ID\n`monitor_id` | int | 设备监控器 ID\n`monitor_name` | string | 设备监控器名称\n`monitor_id` | int | 监控器 ID\n`attr_id` | int | 监控器属性 ID\n`value` | string | 属性值\n`name` | string | 属性名\n`form_type` | string | 属性表单类型\n`form_data` | string | 属性表单选择类型预提供数据\n`attr_default` | string | 属性默认值\n`attr_display_name` | string | 属性描述信息\n\n\n\n","mtime":1396365471000,"source":"docs/device_monitor.md","_id":"ycwkzano53y9vzzv"},"i5e595w9g2hyrn4u":{"content":"title: 环境部署 \nprev: rpm_publish\nnext: inner_api\n---\n\n### 环境部署需求\n\n- 系统： CentOs 5.4 \n- 软件: swansoft [rpm 软件包](rpm_publish.html)\n\n###开发部署\n\n- 安装 dev_swan 工具包\n- 安装 swansoft\n- 更新 git 代码仓库并且同步到目标具体方法：\n\n``` bash\n\tgit clone git@github.com:nmred/swansoft.git\n\tcd swansoft\n\tgit submodule init\n\tgit submodule update\n\t#去引用 sf1 子库的目录更新\n\tcd src/sf\n\tgit fetch\n\tgit pull origin master\n\t./install\n```\n\n{%note warn 警告%}\n如果更新的代码中有影响 PHPD 业务流程的代码，在更新后需要重新启动 PHPD\n{%endnote%}\n","mtime":1393039242000,"source":"docs/evn_deploy.md","_id":"i5e595w9g2hyrn4u"},"0fjfj290lb2tr178":{"content":"title: SWANSOFT 库文档\nnext: rpm_publish\n---\n\nSWANSOFT 库文档\n","mtime":1393039242000,"source":"docs/index.md","_id":"0fjfj290lb2tr178"},"tt55yzchjfp0n6zu":{"content":"title: INNER API\nprev: mysql_desc\nnext: device\n---\n\n该 API 只是内网授权访问接口，目前启动默认是 127.0.0.1 来访问。 \n\n## 使用前须知\n\n使用需确认是否启动了 PHPD 服务中的 swan_data 进程。\n\n```\n\t$ swan_soft start phpd \n```\n\n### 测试 API 说明\n\n文档例子中用到的 `call()` 函数：\n\n```\n\tfunction call($url, $type = 'GET', $params = array())\n\t{   \n\t\t$params = http_build_query($params);\n\t\tif ('GET' == $type) {\n\t\t\t$url .= $params;\n\t\t}\n\t\t$ch = curl_init($url);\n\t\tcurl_setopt($ch, CURLOPT_HEADER, false);\n\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER , 1);\n\n\t\tif ('POST' == $type) {\n\t\t\tcurl_setopt($ch, CURLOPT_POST, 1);\n\t\t\tcurl_setopt($ch, CURLOPT_POSTFIELDS, $params);\n\t\t}\n\n\t\treturn curl_exec($ch);\n\t}\n```\n\n所有的例子在 [`swansoft`](https://www.github.com/nmred/swansoft) 仓库中的 `test/api` 目录下，这些测试案例要求 PHP 环境有 `curl` 扩展。 \n","mtime":1393422953000,"source":"docs/inner_api.md","_id":"tt55yzchjfp0n6zu"},"qyabtl0asg9nah40":{"content":"title: 监控适配器管理 API\nnext: madapter_attr\nprev: device_monitor\n---\n\n###添加监控适配器(madapter.add)\n\n####[URL](#add_url) \nhttp://127.0.0.1/dev/?/madapter.add\n\n####[请求方式](#add_post)\nPOST\n\n####[支持格式](#add_json)\nJSON \n\n####[请求参数](#add_param)\n\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`name` | true | string | 监控适配器名称，监控适配器名称必须是首个字符是字母，由数字、字母、下划线组成,并且至少6位\n`display_name` | false | string | 监控适配器描述信息\n`steps` | false | int | 监控适配器存储间隔时间\n`store_type` | false | int | 监控适配器存储类型 2: rrd, 4:redis, 2+4: redis+rrd\n`madapter_type` | false | int | 监控适配器类型 1: core类型，该类型不能删除. 2: normal 普通监控适配器\n\n####[注意事项](#add_notice)\n\n无\n\n####[调用样例](#add_example)\n\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter.add';\n\t$rev = call($url, 'POST', array('name' => 'madapter_001'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n\n####[返回结果](#add_result)\n``` json\n\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"add madapter success.\",\n\t\t\"data\": {\n\t\t\t\"madapter_id\": \"3\"\n\t\t}\n\t}\n\n```\n####[返回字段说明](#add_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 返回的数据，如果错误返回 NULL\n`madapter_id` | int | 返回监控适配器 ID\n\n---\n###修改监控适配器(madapter.mod)\n\n####[URL](#mod_url) \nhttp://127.0.0.1/dev/?/madapter.mod\n####[请求方式](#mod_post)\nPOST\n####[支持格式](#mod_json)\nJSON \n####[请求参数](#mod_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id` | true | int     | 监控适配器 ID\n`display_name` | false | string    | 监控适配器描述信息\n`steps` | false | int | 监控适配器存储间隔时间\n`store_type` | false | int | 监控适配器存储类型 2: rrd, 4:redis, 2+4: redis+rrd\n`madapter_type` | false | int | 监控适配器类型 1: core类型，该类型不能删除. 2: normal 普通监控适配器\n\n####[注意事项](#mod_notice)\n无\n####[调用样例](#mod_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter.mod';\n\t$rev = call($url, 'POST', array('madapter_id' => '3', 'display_name' => 'madapter_0001_desc'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#mod_result)\n``` json\n\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"mod madapter success.\",\n\t\t\"data\": Null \n\t}\n\n```\n####[返回字段说明](#mod_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n\n---\n###删除监控适配器(madapter.del)\n\n####[URL](#del_url) \nhttp://127.0.0.1/dev/?/madapter.del\n####[请求方式](#del_post)\nPOST\n####[支持格式](#del_json)\nJSON \n####[请求参数](#del_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id` | true | int     | 监控适配器 ID\n####[注意事项](#del_notice)\n无\n####[调用样例](#del_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter.del';\n\t$rev = call($url, 'POST', array('madapter_id' => '3'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#del_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"delete madapter success.\",\n\t\t\"data\": Null \n\t}\n```\n####[返回字段说明](#del_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n---\n###获取监控适配器(madapter.json)\n\n####[URL](#json_url) \nhttp://127.0.0.1/dev/?/madapter.json\n####[请求方式](#json_post)\nPOST\n####[支持格式](#json_json)\nJSON \n####[请求参数](#json_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`page` | false | int     | 分页的页码\n`page_count` | false | int     | 每页的个数\n####[注意事项](#json_notice)\n无\n####[调用样例](#json_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter.json';\n\t$rev = call($url, 'POST', array('page' => '1'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#json_result)\n``` json\n{\n    \"code\": 10000,\n    \"msg\": \"get madapter success.\",\n    \"data\": {\n        \"result\": [\n            {\n                \"madapter_id\": \"2\",\n                \"madapter_name\": \"madapter_002\",\n                \"madapter_display_name\": \"\"\n\t\t\t\t`store_type`: 4,\n\t\t\t\t`madapter_type`: 2,\n            },\n            {\n                \"madapter_id\": \"3\",\n                \"madapter_name\": \"madapter_003\",\n                \"madapter_display_name\": \"\"\n\t\t\t\t`store_type`: 4,\n\t\t\t\t`madapter_type`: 2,\n            },\n            {\n                \"madapter_id\": \"4\",\n                \"madapter_name\": \"madapter_004\",\n                \"madapter_display_name\": \"\",\n\t\t\t\t`store_type`: 4,\n\t\t\t\t`madapter_type`: 2,\n            },\n            {\n                \"madapter_id\": \"5\",\n                \"madapter_name\": \"madapter_005\",\n                \"madapter_display_name\": \"\"\n\t\t\t\t`store_type`: 4,\n\t\t\t\t`madapter_type`: 2,\n            }\n        ],\n        \"count\": \"9\"\n    }\n}\n```\n####[返回字段说明](#json_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n`madapter_id` | int | 监控适配器 ID\n`madapter_name` | string | 监控适配器名称\n`madapter_display_name` | string | 监控适配器描述信息\n`store_type` | int | 监控适配器存储类型 2: rrd, 4:redis, 2+4: redis+rrd\n`madapter_type` | int | 监控适配器类型 1: core类型，该类型不能删除. 2: normal 普通监控适配器\n\n","mtime":1396365471000,"source":"docs/madapter.md","_id":"qyabtl0asg9nah40"},"karfydwiy373zdha":{"content":"title: 监控适配器 archive 管理 API\nprev: madapter_archive\n---\n\n###添加监控适配器 archive (madapter_archive.add)\n\n####[URL](#add_url) \nhttp://127.0.0.1/dev/?/madapter_archive.add\n\n####[请求方式](#add_post)\nPOST\n\n####[支持格式](#add_json)\nJSON \n\n####[请求参数](#add_param)\n\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id`  | true | int    | 监控适配器 ID\n`cf_type`  | true | int    | 监控适配器 archive 计算公式\n`xff`  | true | mixed    | 监控适配器 archive 判断数据正确性的阀值\n`steps`  | true | mixed    | 监控适配器 archive 合并的时间点个数\n`rows`  | true | mixed    | 监控适配器 archive 合并最终最多的条数\n`title`  | true | mixed    | 监控适配器 archive 的描述信息\n\n\n####[注意事项](#add_notice)\n\n无\n\n####[调用样例](#add_example)\n\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_archive.add';\n\t$rev = call($url, 'POST', array('madapter_id' => 1, 'cf_type' => 2, 'xff' => 0.5, 'title' => 'test', 'steps' => 300, 'rows' => 20));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n\n####[返回结果](#add_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"add madapter archive  success.\",\n\t\t\"data\": {\n\t\t\t\"archive_id\": \"1\",\n\t\t\t\"madapter_id\": \"1\"\n\t\t}\n\t}\n```\n####[返回字段说明](#add_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 返回的数据，如果错误返回 NULL\n`archive_id` | int | 返回监控适配器 archive ID\n`madapter_id` | int | 返回监控适配器 ID\n\n---\n###修改监控适配器 archive (madapter_archive.mod)\n\n####[URL](#mod_url) \nhttp://127.0.0.1/dev/?/madapter_archive.mod\n####[请求方式](#mod_post)\nPOST\n####[支持格式](#mod_json)\nJSON \n####[请求参数](#mod_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id`  | true | int    | 监控适配器 ID\n`arid`  | true | int    | 监控适配器 archive ID\n`cf_type`  | true | int    | 监控适配器 archive 计算公式\n`xff`  | true | mixed    | 监控适配器 archive 判断数据正确性的阀值\n`steps`  | true | mixed    | 监控适配器 archive 合并的时间点个数\n`rows`  | true | mixed    | 监控适配器 archive 合并最终最多的条数\n`title`  | true | mixed    | 监控适配器 archive 的描述信息\n\n####[注意事项](#mod_notice)\n无\n####[调用样例](#mod_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_archive.mod';\n\t$rev = call($url, 'POST', array('arid' => 6, 'madapter_id' => 1, 'cf_type' => 3, 'xff' => 0.5, 'title' => 'test', 'steps' => 300, 'rows' = 40));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#mod_result)\n``` json\n\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"mod madapter archive success.\",\n\t\t\"data\": Null \n\t}\n\n```\n####[返回字段说明](#mod_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n\n---\n###删除监控适配器 archive (madapter_archive.del)\n\n####[URL](#del_url) \nhttp://127.0.0.1/dev/?/madapter_archive.del\n####[请求方式](#del_post)\nPOST\n####[支持格式](#del_json)\nJSON \n####[请求参数](#del_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id` | true | int     | 监控适配器 ID\n`arid` | true | int     | 监控适配器 archive ID\n####[注意事项](#del_notice)\n无\n####[调用样例](#del_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_archive.del';\n\t$rev = call($url, 'POST', array('madapter_id' => '3', 'arid' => '1'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#del_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"delete madapter archive success.\",\n\t\t\"data\": Null \n\t}\n```\n####[返回字段说明](#del_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n---\n###获取监控适配器 archive (madapter_archive.json)\n\n####[URL](#json_url) \nhttp://127.0.0.1/dev/?/madapter_archive.json\n####[请求方式](#json_post)\nPOST\n####[支持格式](#json_json)\nJSON \n####[请求参数](#json_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id` | true | int     | 监控适配器 ID\n`arid` | false | int     | 监控适配器 archive ID\n`page` | false | int     | 分页的页码\n`page_count` | false | int     | 每页的个数\n####[注意事项](#json_notice)\n无\n####[调用样例](#json_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_archive.json';\n\t$rev = call($url, 'POST', array('arid' => 3, 'madapter_id' => 1, 'page' => '1', 'page_count' => 20));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#json_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"get madapter archive success.\",\n\t\t\"data\": {\n\t\t\t\"result\": [\n\t\t\t\t{\n\t\t\t\t\t\"archive_id\": \"3\",\n\t\t\t\t\t\"madapter_id\": \"1\",\n\t\t\t\t\t\"title\": \"test\",\n\t\t\t\t\t\"cf_type\": \"1\",\n\t\t\t\t\t\"xff\": \"0.5\",\n\t\t\t\t\t\"steps\": \"60\",\n\t\t\t\t\t\"rows\": \"10\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"archive_id\": \"5\",\n\t\t\t\t\t\"madapter_id\": \"1\",\n\t\t\t\t\t\"title\": \"test\",\n\t\t\t\t\t\"cf_type\": \"1\",\n\t\t\t\t\t\"xff\": \"0.5\",\n\t\t\t\t\t\"steps\": \"60\",\n\t\t\t\t\t\"rows\": \"30\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"count\": \"2\"\n\t\t}\n\t}\n```\n####[返回字段说明](#json_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n`madapter_id`  | true | int    | 监控适配器 ID\n`archive_id`  | true | int    | 监控适配器 archive ID\n`cf_type`  | true | int    | 监控适配器 archive 计算公式\n`xff`  | true | mixed    | 监控适配器 archive 判断数据正确性的阀值\n`steps`  | true | mixed    | 监控适配器 archive 合并的时间点个数\n`rows`  | true | mixed    | 监控适配器 archive 合并最终最多的条数\n`title`  | true | mixed    | 监控适配器 archive 的描述信息\n","mtime":1396365471000,"source":"docs/madapter_archive.md","_id":"karfydwiy373zdha"},"c3dgob6i1x6lokll":{"content":"title: 监控适配器属性管理 API\nprev: madapter\nnext: madapter_metric\n---\n\n###添加监控适配器属性(madapter_attr.add)\n\n####[URL](#add_url) \nhttp://127.0.0.1/dev/?/madapter_attr.add\n\n####[请求方式](#add_post)\nPOST\n\n####[支持格式](#add_json)\nJSON \n\n####[请求参数](#add_param)\n\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`name` | true | string | 监控适配器属性名称，监控适配器属性名称必须是首个字符是字母，由数字、字母、下划线组成,并且至少6位\n`madapter_id`  | true | int    | 监控适配器 ID\n`form_type`  | true | int    | 监控适配器属性表单类型 1:input 2:select 3:check 4:textarea \n`form_data`  | false | mixed    | 监控适配器属性表单数据（对于 select / checked 有效）\n`madapter_id`  | true | int    | 监控适配器 ID\n`display_name` | false | string | 监控适配器属性描述信息\n\n####[注意事项](#add_notice)\n\n无\n\n####[调用样例](#add_example)\n\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_attr.add';\n\t$rev = call($url, 'POST', array('name' => 'madapter_attr_001', 'form_type' => 1, 'madapter_id' => 1, 'display_name' => 'madapter_attr_display'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n\n####[返回结果](#add_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"add madapter attribute success.\",\n\t\t\"data\": {\n\t\t\t\"attr_id\": \"1\",\n\t\t\t\"madapter_id\": \"1\"\n\t\t}\n\t}\n```\n####[返回字段说明](#add_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 返回的数据，如果错误返回 NULL\n`attr_id` | int | 返回监控适配器属性 ID\n`madapter_id` | int | 返回监控适配器 ID\n\n---\n###修改监控适配器属性(madapter_attr.mod)\n\n####[URL](#mod_url) \nhttp://127.0.0.1/dev/?/madapter_attr.mod\n####[请求方式](#mod_post)\nPOST\n####[支持格式](#mod_json)\nJSON \n####[请求参数](#mod_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id` | true | int     | 监控适配器 ID\n`aid` | true | int     | 监控适配器属性 ID\n`name` | false | string    | 监控适配器属性名称\n`display_name` | false | string    | 监控适配器描述信息\n`form_type`  | true | int    | 监控适配器属性表单类型 1:input 2:select 3:check 4:textarea \n`form_data` | false | string    | 监控适配器属性表单数据\n####[注意事项](#mod_notice)\n无\n####[调用样例](#mod_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_attr.mod';\n\t$rev = call($url, 'POST', array('aid' => 1, 'madapter_id' => '3', 'display_name' => 'madapter_attr_0001_desc'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#mod_result)\n``` json\n\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"mod madapter success.\",\n\t\t\"data\": Null \n\t}\n\n```\n####[返回字段说明](#mod_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n\n---\n###删除监控适配器属性(madapter_attr.del)\n\n####[URL](#del_url) \nhttp://127.0.0.1/dev/?/madapter_attr.del\n####[请求方式](#del_post)\nPOST\n####[支持格式](#del_json)\nJSON \n####[请求参数](#del_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id` | true | int     | 监控适配器 ID\n`aid` | true | int     | 监控适配器属性 ID\n####[注意事项](#del_notice)\n无\n####[调用样例](#del_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_attr.del';\n\t$rev = call($url, 'POST', array('madapter_id' => '3', 'aid' => '1'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#del_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"delete madapter success.\",\n\t\t\"data\": Null \n\t}\n```\n####[返回字段说明](#del_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n---\n###获取监控适配器属性(madapter_attr.json)\n\n####[URL](#json_url) \nhttp://127.0.0.1/dev/?/madapter_attr.json\n####[请求方式](#json_post)\nPOST\n####[支持格式](#json_json)\nJSON \n####[请求参数](#json_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id` | true | int     | 监控适配器 ID\n`page` | false | int     | 分页的页码\n`page_count` | false | int     | 每页的个数\n####[注意事项](#json_notice)\n无\n####[调用样例](#json_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_attr.json';\n\t$rev = call($url, 'POST', array('page' => '1'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#json_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"get madapter attribute success.\",\n\t\t\"data\": {\n\t\t\t\"result\": [\n\t\t\t\t{\n\t\t\t\t\t\"attr_id\": \"1\",\n\t\t\t\t\t\"madapter_id\": \"2\",\n\t\t\t\t\t\"attr_name\": \"madapter_attr_001\",\n\t\t\t\t\t\"attr_display_name\": \"\",\n\t\t\t\t\t\"form_type\": \"1\",\n\t\t\t\t\t\"form_data\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"attr_id\": \"2\",\n\t\t\t\t\t\"madapter_id\": \"2\",\n\t\t\t\t\t\"attr_name\": \"madapter_attr_002\",\n\t\t\t\t\t\"attr_display_name\": \"\",\n\t\t\t\t\t\"form_type\": \"1\",\n\t\t\t\t\t\"form_data\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"attr_id\": \"3\",\n\t\t\t\t\t\"madapter_id\": \"2\",\n\t\t\t\t\t\"attr_name\": \"madapter_attr_003\",\n\t\t\t\t\t\"attr_display_name\": \"\",\n\t\t\t\t\t\"form_type\": \"1\",\n\t\t\t\t\t\"form_data\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"attr_id\": \"4\",\n\t\t\t\t\t\"madapter_id\": \"2\",\n\t\t\t\t\t\"attr_name\": \"madapter_attr_004\",\n\t\t\t\t\t\"attr_display_name\": \"\",\n\t\t\t\t\t\"form_type\": \"1\",\n\t\t\t\t\t\"form_data\": \"\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"count\": \"4\"\n\t\t}\n\t}\n```\n####[返回字段说明](#json_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n`attr_id` | int | 监控适配器属性 ID\n`madapter_id` | int | 监控适配器 ID\n`attr_name` | string | 监控适配器属性名称\n`attr_display_name` | string | 监控适配器属性描述信息\n`form_type` | string | 监控适配器属性表单类型\n`form_data` | string | 监控适配器属性表单数据\n","mtime":1396365471000,"source":"docs/madapter_attr.md","_id":"c3dgob6i1x6lokll"},"c68ns680m7u58zh3":{"content":"title: 监控适配器数据项管理 API\nprev: madapter_attr\nnext: madapter_archive\n---\n\n###添加监控适配器数据项(madapter_metric.add)\n\n####[URL](#add_url) \nhttp://127.0.0.1/dev/?/madapter_metric.add\n\n####[请求方式](#add_post)\nPOST\n\n####[支持格式](#add_json)\nJSON \n\n####[请求参数](#add_param)\n\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`name` | true | string | 监控适配器数据项名称，监控适配器数据项名称必须是首个字符是字母，由数字、字母、下划线组成,并且至少6位\n`madapter_id`  | true | int    | 监控适配器 ID\n`collect_every`  | true | int    | 监控适配器数据项轮询的时间间隔\n`time_threshold`  | false | mixed    | 监控适配器数据项获取数据超时时间 (ms)\n`title` | false | string | 监控适配器数据项描述信息\n`unit` | false | string | 监控适配器数据项数据单位\n`dst_type` | false | int | 监控适配器数据项数据处理类型\n`tmax` | false | int | 监控适配器数据项最大允许超时时间\n`vmin` | false | string | 监控适配器数据项最小允许值\n`vmax` | false | string | 监控适配器数据项最大允许值\n\n####[注意事项](#add_notice)\n\n无\n\n####[调用样例](#add_example)\n\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_metric.add';\n\t$rev = call($url, 'POST', array('name' => 'metric' . time(), 'collect_every' => '1000', 'madapter_id' => 1, 'title' => 'madapter metric test'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n\n####[返回结果](#add_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"add madapter metric  success.\",\n\t\t\"data\": {\n\t\t\t\"metric_id\": \"1\",\n\t\t\t\"madapter_id\": \"1\"\n\t\t}\n\t}\n```\n####[返回字段说明](#add_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 返回的数据，如果错误返回 NULL\n`metric_id` | int | 返回监控适配器数据项 ID\n`madapter_id` | int | 返回监控适配器 ID\n\n---\n###修改监控适配器数据项(madapter_metric.mod)\n\n####[URL](#mod_url) \nhttp://127.0.0.1/dev/?/madapter_metric.mod\n####[请求方式](#mod_post)\nPOST\n####[支持格式](#mod_json)\nJSON \n####[请求参数](#mod_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id` | true | int     | 监控适配器 ID\n`metric_id` | true | int     | 监控适配器数据项 ID\n`name` | false | string    | 监控适配器数据项名称\n`time_threshold` | false | string    | 监控适配器数据项获取数据超时时间\n`collect_every` | false | string    | 监控适配器轮询时间间隔\n`dst_type` | false | int | 监控适配器数据项数据处理类型\n`tmax` | false | int | 监控适配器数据项最大允许超时时间\n`vmin` | false | string | 监控适配器数据项最小允许值\n`vmax` | false | string | 监控适配器数据项最大允许值\n`unit` | false | string | 监控适配器数据项数据单位\n`title` | false | string | 监控适配器数据项描述信息\n\n####[注意事项](#mod_notice)\n无\n####[调用样例](#mod_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_metric.mod';\n\t$rev = call($url, 'POST', array('madapter_id' => 6, 'madapter_id' => '1', 'title' => 'madapter_metric_0001_desc'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#mod_result)\n``` json\n\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"mod madapter metric success.\",\n\t\t\"data\": Null \n\t}\n\n```\n####[返回字段说明](#mod_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n\n---\n###删除监控适配器数据项(madapter_metric.del)\n\n####[URL](#del_url) \nhttp://127.0.0.1/dev/?/madapter_metric.del\n####[请求方式](#del_post)\nPOST\n####[支持格式](#del_json)\nJSON \n####[请求参数](#del_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id` | true | int     | 监控适配器 ID\n`metric_id` | true | int     | 监控适配器数据源 ID\n####[注意事项](#del_notice)\n无\n####[调用样例](#del_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_metric.del';\n\t$rev = call($url, 'POST', array('madapter_id' => '3', 'aid' => '1'));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#del_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"delete madapter metric success.\",\n\t\t\"data\": Null \n\t}\n```\n####[返回字段说明](#del_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n\n---\n###获取监控适配器数据源(madapter_metric.json)\n\n####[URL](#json_url) \nhttp://127.0.0.1/dev/?/madapter_metric.json\n####[请求方式](#json_post)\nPOST\n####[支持格式](#json_json)\nJSON \n####[请求参数](#json_param)\n  | 必选 | 类型及范围 | 说明\n--- | --- | --- | ---\n`madapter_id` | true | int     | 监控适配器 ID\n`page` | false | int     | 分页的页码\n`page_count` | false | int     | 每页的个数\n####[注意事项](#json_notice)\n无\n####[调用样例](#json_example)\n```\n\t<?php\n\t$url = '127.0.0.1:9080/dev/?/madapter_metric.json';\n\t$rev = call($url, 'POST', array('madapter_id' => 1, 'page' => '1', 'page_count' => 20));\n\t$rev = json_decode($rev, true);\n\tvar_dump($rev);\n```\n####[返回结果](#json_result)\n``` json\n\t{\n\t\t\"code\": 10000,\n\t\t\"msg\": \"get madapter metric success.\",\n\t\t\"data\": {\n\t\t\t\"result\": [\n\t\t\t\t{\n\t\t\t\t\t\"metric_id\": \"1\",\n\t\t\t\t\t\"metric_name\": \"ss212221393426199\",\n\t\t\t\t\t\"madapter_id\": \"1\",\n\t\t\t\t\t\"collect_every\": \"1000\",\n\t\t\t\t\t\"time_threshold\": \"200\",\n\t\t\t\t\t\"tmax\": \"30\",\n\t\t\t\t\t\"dst_type\": \"1\",\n\t\t\t\t\t\"vmin\": \"U\",\n\t\t\t\t\t\"vmax\": \"U\",\n\t\t\t\t\t\"title\": \"eeee\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"count\": \"1\"\n\t\t}\n\t}\n```\n####[返回字段说明](#json_result_dis)\n返回值字段 | 字段类型 | 字段说明\n--- | --- | ---\n`code` | string | 返回接口的状态码具体的状态码见 [接口错误码说明](api_errno.html) \n`msg`  | string | 接口的返回描述信息\n`data` | array NULL  | 不返回数据\n`metric_id` | int | 监控适配器数据项 ID\n`madapter_id` | int | 监控适配器 ID\n`metric_name` | string | 监控适配器数据项名称\n`collect_every` | string | 监控适配器轮询时间\n`time_threshold` | string | 监控适配器数据项获取数据超时时间\n`title` | string | 监控适配器数据项描述信息\n`unit` | string | 监控适配器数据项数据单位\n`dst_type` | false | int | 监控适配器数据项数据处理类型\n`tmax` | false | int | 监控适配器数据项最大允许超时时间\n`vmin` | false | string | 监控适配器数据项最小允许值\n`vmax` | false | string | 监控适配器数据项最大允许值\n","mtime":1396365471000,"source":"docs/madapter_metric.md","_id":"c68ns680m7u58zh3"},"5z295dx1pgu2sxa2":{"content":"title: Smeta 产品数据字典\nnext: inner_api\nprev: evn_deploy\n---\n\n### swan_soft 数据库 ###\n\n####sequence_global####\n\n - | 属性名\n--- | --- \n 表名 |sequence_global\n 描述 | 维护全局的数据表的唯一序列号\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `table_name`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ntable_name | varchar | false | 64 |  |   |  \n | 维护序列号的表名称 ||||||\nsequence_id | int | false | 11 |  |   | true\n | 自增长 ID ||||||\n####sequence_device####\n\n - | 属性名\n--- | --- \n 表名 |sequence_device\n 描述 | 设备成员数据表的唯一序列号\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `device_id`,`table_name`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ndevice_id | int | false | 11 |  |   | true\n | 设备 ID ||||||\ntable_name | varchar | false | 64 |  |   |  \n | 维护序列号的表名称 ||||||\nsequence_id | int | false | 11 |  |   | true\n | 自增长 ID ||||||\n####sequence_madapter####\n\n - | 属性名\n--- | --- \n 表名 |sequence_madapter\n 描述 | 监控适配器数据表的唯一序列号\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `madapter_id`,`table_name`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \nmadapter_id | int | false | 11 |  |   | true\n | 监控适配器 ID ||||||\ntable_name | varchar | false | 64 |  |   |  \n | 维护序列号的表名称 ||||||\nsequence_id | int | false | 11 |  |   | true\n | 自增长 ID ||||||\n####sequence_graph####\n\n - | 属性名\n--- | --- \n 表名 |sequence_graph\n 描述 | 图标定义数据表的唯一序列号\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `graph_id`,`table_name`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ngraph_id | int | false | 11 |  |   | true\n | 图表 ID ||||||\ntable_name | varchar | false | 64 |  |   |  \n | 维护序列号的表名称 ||||||\nsequence_id | int | false | 11 |  |   | true\n | 自增长 ID ||||||\n####device_key####\n\n - | 属性名\n--- | --- \n 表名 |device_key\n 描述 | 监控的设备关键表\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `device_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ndevice_id | int | false | 11 |  |   | true\n | 设备 id ||||||\ndevice_name | varchar | false | 255 |  |   |  \n | 设备名称(唯一) ||||||\n####device_basic####\n\n - | 属性名\n--- | --- \n 表名 |device_basic\n 描述 | 监控的设备基本信息表\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `device_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ndevice_id | int | false | 11 |  |   | true\n | 设备 id ||||||\ndevice_display_name | varchar | false | 255 |  |   |  \n | 设备显示名称 ||||||\nhost_name | varchar | false | 255 |  |   |  \n | 设备主机地址 ||||||\nheartbeat_time | int | false | 11 | 300 |   | true\n | 用来检测服务器心跳的阀值, 单位（秒） ||||||\n####device_monitor####\n\n - | 属性名\n--- | --- \n 表名 |device_monitor\n 描述 | 设备监控器\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `monitor_id`,`device_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \nmonitor_id | int | false | 11 |  |   | true\n | 设备监控器 id ||||||\nmonitor_name | varchar | false | 255 |  |   |  \n | 设备监控适配器名称 ||||||\ndevice_id | int | false | 11 |  |   | true\n | 设备 id ||||||\nmadapter_id | int | false | 11 |  |   | true\n | 监控适配器 id ||||||\n####device_monitor_params####\n\n - | 属性名\n--- | --- \n 表名 |device_monitor_params\n 描述 | 监控器参数\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `attr_id`,`device_id`,`monitor_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \nattr_id | int | false | 11 |  |   | true\n | 监控器属性 id ||||||\ndevice_id | int | false | 11 |  |   | true\n | 设备 id ||||||\nmonitor_id | int | false | 11 |  |   | true\n | 设备监控器 id ||||||\nvalue | varchar | false | 255 |  |   |  \n | 属性值 ||||||\n####madapter_basic####\n\n - | 属性名\n--- | --- \n 表名 |madapter_basic\n 描述 | 监控适配器管理\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `madapter_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \nmadapter_id | int | false | 11 |  |   | true\n | 监控适配器 id ||||||\nmadapter_name | varchar | false | 255 |  |   |  \n | 监控适配器名称 ||||||\nmadapter_display_name | varchar | false | 255 |  |   |  \n | 监控适配器显示名称 ||||||\nsteps | int | false | 11 |  |   | true\n | 监控适配器存储 rrd 的间隔时间 (秒) ||||||\nstore_type | tinyint | false | 1 | 2 |   | true\n | 数据存储引擎 2: rrd存储 4: redis存储 , 如果是选项之和说明是 rrd + redis ||||||\nmadapter_type | tinyint | false | 1 | 2 |   | true\n | 监控适配器类型：1: core 该类型在添加设备的时候会一并添加进去，不允许删除 2：normal 普通监控适配器 ||||||\n####madapter_attribute####\n\n - | 属性名\n--- | --- \n 表名 |madapter_attribute\n 描述 | 监控适配器属性管理\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `attr_id`,`madapter_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \nattr_id | int | false | 11 |  |   | true\n | 监控适配器属性 id ||||||\nmadapter_id | int | false | 11 |  |   | true\n | 监控适配器 id ||||||\nattr_name | varchar | false | 255 |  |   |  \n | 属性名称 ||||||\nattr_display_name | varchar | false | 255 |  |   |  \n | 属性显示名称 ||||||\nform_type | varchar | false | 255 |  |   |  \n | 属性表单类型 ||||||\nform_data | varchar | false | 255 |  |   |  \n | 属性表单数据 ||||||\nattr_default | varchar | false | 255 |  |   |  \n | 属性默认值 ||||||\n####madapter_metric####\n\n - | 属性名\n--- | --- \n 表名 |madapter_metric\n 描述 | 监控适配器收集数据项\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `metric_id`,`madapter_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \nmetric_id | int | false | 11 |  |   | true\n | 数据项 id ||||||\nmetric_name | varchar | false | 255 |  |   |  \n | 数据项名称 ||||||\nmadapter_id | int | false | 11 |  |   | true\n | 监控适配器 id ||||||\ncollect_every | int | false | 11 |  |   | true\n | 轮询周期 ||||||\ntime_threshold | int | false | 11 |  |   | true\n | 收集数据超时 ||||||\ntmax | int | false | 11 |  |   | true\n | 没有收到数据的最长时间 ||||||\ndst_type | tinyint | false | 1 | 1 |   | true\n | 数据入库处理规则 ||||||\nvmin | varchar | false | 255 | U |   |  \n | 数据的最小值 ||||||\nvmax | varchar | false | 255 | U |   |  \n | 数据的最大值 ||||||\nunit | varchar | false | 255 |  |   |  \n | 数据项的单位 ||||||\ntitle | varchar | false | 255 |  |   |  \n | 数据项标题 ||||||\n####madapter_archive####\n\n - | 属性名\n--- | --- \n 表名 |madapter_archive\n 描述 | 监控适配器数据归档规则\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `archive_id`,`madapter_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \narchive_id | int | false | 11 |  |   | true\n | 归档 id ||||||\nmadapter_id | int | false | 11 |  |   | true\n | 监控适配器 id ||||||\ntitle | varchar | false | 255 |  |   |  \n | 归档规则标题 ||||||\ncf_type | int | false | 11 |  |   | true\n | 归档运算类型 ||||||\nxff | varchar | false | 255 | 0.5 |   |  \n | 无效数据判断界限 ||||||\nsteps | int | false | 11 |  |   | true\n | 归档一个数据点合并原始数据点个数 ||||||\nrows | int | false | 11 |  |   | true\n | 一共归档条目数 ||||||\n####graph_basic####\n\n - | 属性名\n--- | --- \n 表名 |graph_basic\n 描述 | 监控适配器绘图配置\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `graph_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ngraph_id | int | false | 11 |  |   | true\n | 绘图配置 id ||||||\nscope_type | tinyint | false | 1 | 1 |   |  \n | 该绘图配置作用范围 1: 全局 2：设备 3: 允许跨设备全局显示 4: 允许跨设备在提及的设备中显示 ||||||\nscope_ids | varchar | false | 255 |  |   |  \n | 作用范围 IDS ||||||\ntitle | varchar | false | 255 |  |   |  \n | 图片的顶部标题 ||||||\nvlabel | varchar | false | 255 |  |   |  \n | 图片的垂直的标题 ||||||\ndesc | varchar | false | 255 |  |   |  \n | 图片的描述信息 ||||||\nsteps | int | false | 11 |  |   | true\n | 绘图的间隔点 ||||||\nstart | int | false | 11 |  |   | true\n | 绘图的起始点 ||||||\nend | int | false | 11 |  |   | true\n | 绘图的终点 ||||||\n####graph_def####\n\n - | 属性名\n--- | --- \n 表名 |graph_def\n 描述 | 监控适配器绘图数据项定义\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `graph_id`,`def_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ndef_id | int | false | 11 |  |   | true\n | 绘图数据项定义 id ||||||\ngraph_id | int | false | 11 |  |   | true\n | 绘图配置 id ||||||\nname | varchar | false | 255 |  |   |  \n | 数据项的 name ||||||\nds_name | varchar | false | 255 |  |   |  \n | RRD 数据库的数据源名 ||||||\ncf_type | tinyint | false | 1 |  |   | true\n | 归并计算公式类型 ||||||\n####graph_cdef####\n\n - | 属性名\n--- | --- \n 表名 |graph_cdef\n 描述 | 监控适配器绘图计算数据项定义\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `graph_id`,`cdef_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ncdef_id | int | false | 11 |  |   | true\n | 绘图计算数据项定义 id ||||||\ngraph_id | int | false | 11 |  |   | true\n | 绘图配置 id ||||||\nname | varchar | false | 255 |  |   |  \n | 数据项的 name ||||||\noperator | varchar | false | 255 |  |   |  \n | 计算表达式 ||||||\n####graph_graph####\n\n - | 属性名\n--- | --- \n 表名 |graph_graph\n 描述 | 监控适配器绘图定义\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `graph_id`,`dgraph_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ndgraph_id | int | false | 11 |  |   | true\n | 绘图定义 id ||||||\ngraph_id | int | false | 11 |  |   | true\n | 绘图配置 id ||||||\ndata_id | int | false | 11 |  |   | true\n | 数据项 id ||||||\ncolor | varchar | false | 255 |  |   |  \n | 图标的颜色 ||||||\n图例说明 | varchar | false | 255 |  |   |  \n | 图例说明描述 ||||||\n####graph_comment####\n\n - | 属性名\n--- | --- \n 表名 |graph_comment\n 描述 | 监控适配器绘图注释性文字定义\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `graph_id`,`comment_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ncomment_id | int | false | 11 |  |   | true\n | 绘图注释定义 id ||||||\ngraph_id | int | false | 11 |  |   | true\n | 绘图配置 id ||||||\ncomment | varchar | false | 255 |  |   |  \n | 图片的注释信息 ||||||\n####graph_gprint####\n\n - | 属性名\n--- | --- \n 表名 |graph_gprint\n 描述 | 监控适配器绘图格式化的文字信息\n Engine |  InnoDB\n 编码 | utf8\n 主键 | `graph_id`,`gprint_id`\n\n 字段名 | 类型 | nullable | 宽度 | 默认值  | auto | unsigned \n --- | --- | --- | --- | ---  | --- | --- \ngprint_id | int | false | 11 |  |   | true\n | 绘图格式化信息 id ||||||\ngraph_id | int | false | 11 |  |   | true\n | 绘图配置 id ||||||\ndata_id | int | false | 11 |  |   | true\n | 格式化的变量名 id ||||||\ncf_type | tinyint | false | 11 |  |   | true\n | 运算类型 ||||||\nformat | varchar | false | 255 |  |   |  \n | 格式化的字符串定义 ||||||\n","mtime":1396365471000,"source":"docs/mysql_desc.md","_id":"5z295dx1pgu2sxa2"},"mv9qq7mtni5wgelm":{"content":"title: RPM 安装包发布 \nprev: index\nnext: evn_deploy\n---\n\n### 最新 RPM 包下载\n\n- #### smeta-0.1.0-beta.i386.rpm [下载](http://pan.baidu.com/s/1bnb5mk3) (2014-04-01)\n\n\n> 增加 rrdtool 中间件\n\n> 增加 PHPD swdata 模块\n\n> 重构监控适配器相关 API 接口\n\n> 添加监控中心的 server\n\n> 添加 gearman\n\n> 添加 nginx\n\n> 添加 redis\n\n> 添加 rrdtool\n\n> 添加 mysql\n\n> 增加 rrdtool PHP 扩展\n\n> V0.1.0 首次 smeta.smond.swanweb 统一主版本号\n\n\n###其他\n\nRPM 目前采用迭代的方式出包，一般在有 opt 更新的时候才会出新包，日常更新不采用 RPM， 详细见 [环境部署](evn_deploy.html)\n\n具体打包流程见: [RPM打包流程]()\n","mtime":1396366285000,"source":"docs/rpm_publish.md","_id":"mv9qq7mtni5wgelm"}}}